#region License

//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

#endregion

namespace OpenRasta.Tests.Unit.Binding
{
    #region Using Directives

    using Moq;

    using NUnit.Framework;

    using OpenRasta.Binding;
    using OpenRasta.Contracts.Binding;
    using OpenRasta.Contracts.TypeSystem;
    using OpenRasta.Testing.Specifications;
    using OpenRasta.TypeSystem;

    #endregion

    [TestFixture]
    public class when_building_binders_from_static_methods
    {
        [Test]
        public void the_binder_is_created_correctly()
        {
            var type = TypeSystems.Default.FromClr(typeof(ClassWithStaticBinder));
            var binderLocator = new DefaultObjectBinderLocator();

            binderLocator.GetBinder(type).ShouldBe(ClassWithStaticBinder.StaticBinder);
        }

        private class ClassWithStaticBinder
        {
            public static readonly IObjectBinder StaticBinder = new Mock<IObjectBinder>().Object;

            public static IObjectBinder GetBinder(ITypeSystem typeSystem, IMember member)
            {
                return StaticBinder;
            }
        }
    }
}
