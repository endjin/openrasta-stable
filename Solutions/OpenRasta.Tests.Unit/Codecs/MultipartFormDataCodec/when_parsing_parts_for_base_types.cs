#region License

//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

#endregion

namespace OpenRasta.Tests.Unit.Codecs.MultipartFormDataCodec
{
    #region Using Directives

    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;

    using NUnit.Framework;

    using OpenRasta.Testing.Specifications;
    using OpenRasta.Tests.Unit.Codecs.MediaTypeDictionary;
    using OpenRasta.Web;

    #endregion

    public class when_parsing_parts_for_base_types : multipart_codec
    {
        [Test]
        public void a_string_is_assigned()
        {
            given_context();

            GivenAMultipartRequestStream(Scenarios.TwoFields);

            when_decoding<string>("username");

            then_decoding_result<string>().ShouldBe("johndoe");
        }

        [Test]
        public void a_datetime_is_assigned()
        {
            given_context();

            GivenAMultipartRequestStream(Scenarios.TwoFields);

            when_decoding<DateTime>("dateofbirth");

            then_decoding_result<DateTime>().ShouldBe(DateTime.Parse("10 Dec 2001"));
        }

        [Test]
        public void a_large_field_value_is_stored_on_disk()
        {
            given_context();
            GivenAMultipartRequestStream(Scenarios.LargeField);

            when_decoding<IDictionary<string, IList<IMultipartHttpEntity>>>("field");

            then_decoding_result<IDictionary<string, IList<IMultipartHttpEntity>>>()["field"].First().Stream.ShouldBeOfType<FileStream>().Length.ShouldBe(85003);
        }
    }
}