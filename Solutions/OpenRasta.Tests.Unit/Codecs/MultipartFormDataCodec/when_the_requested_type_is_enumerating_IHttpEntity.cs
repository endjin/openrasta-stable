#region License

//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

#endregion

namespace OpenRasta.Tests.Unit.Codecs.MultipartFormDataCodec
{
    #region Using Directives

    using System.Collections.Generic;

    using NUnit.Framework;

    using OpenRasta.Tests.Unit.Codecs.MediaTypeDictionary;
    using OpenRasta.Web;

    #endregion

    public class when_the_requested_type_is_enumerating_IHttpEntity : multipart_codec
    {
        [Test]
        public void string_parameters_are_passed_correctly()
        {
            given_context();

            GivenAMultipartRequestStream(Scenarios.OneFieldOneFile);

            when_decoding<IEnumerable<IMultipartHttpEntity>>();

            ThenTheRawResultShouldContain(
                entity => 
                {
                    entity.WithEntity("johndoe").Headers
                        .ContentDisposition = new ContentDispositionHeader("form-data;name=\"username\"");
                },
                entity => 
                {
                    entity.WithEntity("Content of a document").Headers
                        .ContentDisposition = new ContentDispositionHeader("form-data; name=\"document\"; filename=\"document.txt\"");
                    entity.ContentType = new MediaType("text/plain;charset=utf-8");
                });
        }
    }
}